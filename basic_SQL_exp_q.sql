/* Login and User table */

/*CREATE TABLE users_ab (
    USER_ID INT PRIMARY KEY,
    USER_NAME VARCHAR(20) NOT NULL,
    USER_STATUS VARCHAR(20) NOT NULL
);

CREATE TABLE logins_ab (
    USER_ID INT,
    LOGIN_TIMESTAMP DATETIME NOT NULL,
    SESSION_ID INT PRIMARY KEY,
    SESSION_SCORE INT,
    FOREIGN KEY (USER_ID) REFERENCES USERS_AB(USER_ID)
);*/

/*Select * from users_ab
Select * from logins_ab*/

/*INSERT INTO USERS_AB VALUES (1, 'Alice', 'Active');
INSERT INTO USERS_AB VALUES (2, 'Bob', 'Inactive');
INSERT INTO USERS_AB VALUES (3, 'Charlie', 'Active');
INSERT INTO USERS_AB VALUES (4, 'David', 'Active');
INSERT INTO USERS_AB VALUES (5, 'Eve', 'Inactive');
INSERT INTO USERS_AB VALUES (6, 'Frank', 'Active');
INSERT INTO USERS_AB VALUES (7, 'Grace', 'Inactive');
INSERT INTO USERS_AB VALUES (8, 'Heidi', 'Active');
INSERT INTO USERS_AB VALUES (9, 'Ivan', 'Inactive');
INSERT INTO USERS_AB VALUES (10, 'Judy', 'Active');*/

/*INSERT INTO LOGINS_AB  VALUES (1, '2023-07-15 09:30:00', 1001, 85);
INSERT INTO LOGINS_AB VALUES (2, '2023-07-22 10:00:00', 1002, 90);
INSERT INTO LOGINS_AB VALUES (3, '2023-08-10 11:15:00', 1003, 75);
INSERT INTO LOGINS_AB VALUES (4, '2023-08-20 14:00:00', 1004, 88);
INSERT INTO LOGINS_AB  VALUES (5, '2023-09-05 16:45:00', 1005, 82);

INSERT INTO LOGINS_AB  VALUES (6, '2023-10-12 08:30:00', 1006, 77);
INSERT INTO LOGINS_AB  VALUES (7, '2023-11-18 09:00:00', 1007, 81);
INSERT INTO LOGINS_AB VALUES (8, '2023-12-01 10:30:00', 1008, 84);
INSERT INTO LOGINS_AB  VALUES (9, '2023-12-15 13:15:00', 1009, 79);*/
/*
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (1, '2024-01-10 07:45:00', 1011, 86);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (2, '2024-01-25 09:30:00', 1012, 89);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (3, '2024-02-05 11:00:00', 1013, 78);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (4, '2024-03-01 14:30:00', 1014, 91);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (5, '2024-03-15 16:00:00', 1015, 83);

INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (6, '2024-04-12 08:00:00', 1016, 80);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (7, '2024-05-18 09:15:00', 1017, 82);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (8, '2024-05-28 10:45:00', 1018, 87);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (9, '2024-06-15 13:30:00', 1019, 76);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (10, '2024-06-25 15:00:00', 1010, 92);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (10, '2024-06-26 15:45:00', 1020, 93);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (10, '2024-06-27 15:00:00', 1021, 92);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (10, '2024-06-28 15:45:00', 1022, 93);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (1, '2024-01-10 07:45:00', 1101, 86);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (3, '2024-01-25 09:30:00', 1102, 89);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (5, '2024-01-15 11:00:00', 1103, 78);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (2, '2023-11-10 07:45:00', 1201, 82);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (4, '2023-11-25 09:30:00', 1202, 84);
INSERT INTO LOGINS_AB (USER_ID, LOGIN_TIMESTAMP, SESSION_ID, SESSION_SCORE) VALUES (6, '2023-11-15 11:00:00', 1203, 80);
*/
-- All users not logged in last 5 months ( Their max timestamp should be before 5 months from now)
-- If they have logged in the last 5 months I am not interested

Select *, Dateadd(month,-5,getdate()) from logins_ab

Select User_id, max(login_timestamp)
from logins_ab
group by user_id
having max(login_timestamp) < Dateadd(month,-5,getdate())

-- For BU's quarterly analysis calculate how many users and how many sessions were at each quarter

-- Select * from logins_ab

Select datepart(quarter, login_timestamp) as quarter_number,
count(*) as session_count,
count(distinct(user_id)) as user_count from logins_ab
group by datepart(quarter, login_timestamp)

-- Display users that logged in Jan 2024 and not in Nov 2023

Select distinct user_id from logins_ab
where login_timestamp between '2024-01-01' and '2024-01-31'
-- 1,2,3,5
and user_id not in(
Select user_id from logins_ab
where login_timestamp between '2023-11-01' and '2023-11-30')
-- 2,4,6,7

-- add to the query in 2 the percentage change in the last quarter

